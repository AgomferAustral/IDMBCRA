"0",""
"0","# Outliers"
"0",""
"0","# Función para identificar outliers usando el IQR"
"0","identify_outliers <- function(data, column) {"
"0","  Q1 <- quantile(data[[column]], 0.25, na.rm = TRUE)"
"0","  Q3 <- quantile(data[[column]], 0.75, na.rm = TRUE)"
"0","  IQR <- Q3 - Q1"
"0","  lower_bound <- Q1 - 1.5 * IQR"
"0","  upper_bound <- Q3 + 1.5 * IQR"
"0","  outliers <- data %>%"
"0","    filter(.data[[column]] < lower_bound | .data[[column]] > upper_bound)"
"0","  return(outliers)"
"0","}"
"0",""
"0","# Identificamos outliers para cada columna numérica"
"0","outliers_list <- map(names(df_seleccionados), ~ {"
"0","  if (is.numeric(df_seleccionados[[.x]])) {"
"0","    outliers <- identify_outliers(df_seleccionados, .x)"
"0","    if (nrow(outliers) > 0) {"
"0","      return(list(column = .x, outliers = outliers))"
"0","    }"
"0","  }"
"0","  return(NULL)"
"0","}) %>% compact()"
"0",""
"0","# Mostramos los outliers identificados"
"0","walk(outliers_list, ~ {"
"0","  cat(""Outliers en la columna:"", .x$column, ""\n"")"
"0","  print(.x$outliers)"
"0","  cat(""\n"")"
"0","})"
"1","Outliers en la columna:"
"1"," "
"1","proxy_edad_actual"
"1"," "
"1","
"
